module.exports = {
  extends: ['@commitlint/config-conventional'],
  parserPreset: 'conventional-changelog-conventionalcommits',

  // √âtend les r√®gles de validation des messages de commit avec celles d√©finies dans '@commitlint/config-conventional'.

  rules: {
    // La r√®gle 'type-enum' v√©rifie que le type de commit (comme feat, fix, docs, etc.) est parmi ceux sp√©cifi√©s dans le tableau.
    'type-enum': [
      2,
      'always',
      [
        'feat',
        'fix',
        'docs',
        'style',
        'refactor',
        'test',
        'chore',
        'revert',
        'ci',
        'build',
      ],
    ],

    // La r√®gle 'scope-enum' v√©rifie que la port√©e (scope) du commit est parmi celles sp√©cifi√©es dans le tableau.
    'scope-enum': [
      2,
      'always',
      ['core', 'ui', 'backend', 'frontend', 'devops'],
    ],

    // La r√®gle 'subject-case' v√©rifie que la premi√®re lettre du sujet du commit est en casse de phrase (premi√®re lettre en majuscule).
    'subject-case': [2, 'always', 'sentence-case'],

    // La r√®gle 'body-max-line-length' v√©rifie que chaque ligne du corps du commit ne d√©passe pas 500 caract√®res.
    'body-max-line-length': [2, 'always', 500],

    // La r√®gle 'scope-empty' v√©rifie que la port√©e (scope) du commit n'est pas vide.
    'scope-empty': [2, 'never'],

    // La r√®gle 'scope-case' v√©rifie que la port√©e (scope) est en minuscules.
    'scope-case': [2, 'always', 'lower-case'],

    // La r√®gle 'header-max-length' v√©rifie que la ligne d'en-t√™te (header) du commit ne d√©passe pas 50 caract√®res.
    'header-max-length': [2, 'always', 100],

    // La r√®gle 'header-full-stop' v√©rifie qu'il n'y a pas de point √† la fin de la ligne d'en-t√™te du commit.
    'header-full-stop': [2, 'never', '.'],

    // La r√®gle 'body-case' v√©rifie que la premi√®re lettre de chaque phrase dans le corps du commit est en casse de phrase (premi√®re lettre en majuscule).
    'body-case': [2, 'always', 'sentence-case'],
  },

  prompt: {
    messages: {
      skip: ':skip',
      max: 'pas plus de %d caract√®res',
      min: 'au moins %d caract√®res',
      emptyWarning: 'ne peut √™tre vide',
      upperLimitWarning: 'au-dessus de la limite',
      lowerLimitWarning: 'sous la limite',
    },
    questions: {
      type: {
        description:
          'Choisissez le type de modification que concerne votre commit :',
        enum: {
          feat: {
            description: 'Ajout/mise √† jour de fonctionnalit√©',
            title: 'Features',
            emoji: '‚ú®',
          },
          fix: {
            description: 'Correction de bug',
            title: 'Bug Fixes',
            emoji: 'üêõ',
          },
          docs: {
            description: 'Ajout/modif. de documentation',
            title: 'Documentation',
            emoji: 'üìö',
          },
          style: {
            description:
              'Modifs de style et de mise en forme du code (espacements, virgules, etc.)',
            title: 'Styles',
            emoji: 'üíé',
          },
          refactor: {
            description:
              'Modif. des sources n‚Äô√©tant ni un correctif, ni un ajout de fonctionnalit√©',
            title: 'Code Refactoring',
            emoji: 'üì¶',
          },
          perf: {
            description: 'Am√©lioration de la performance',
            title: 'Performance Improvements',
            emoji: 'üöÄ',
          },
          test: {
            description: 'Ajout ou correction de tests',
            title: 'Tests',
            emoji: 'üö®',
          },
          build: {
            description:
              'Modif. affectant le "build" ou les d√©pendances externes (exemples de contextes :  webpack, broccoli, npm)',
            title: 'Builds',
            emoji: 'üõ†',
          },
          ci: {
            description:
              'Modif. de la configuration ou des scripts li√©s √† la CI (Travis, Circle, BrowserStack, SauceLabs, etc.)',
            title: 'Continuous Integrations',
            emoji: '‚öôÔ∏è',
          },
          chore: {
            description:
              'Autres mises √† jour ne modifiant ni les sources, ni les tests',
            title: 'Chores',
            emoji: '‚ôªÔ∏è',
          },
          revert: {
            description: 'Annuler (revert) un commit pr√©c√©dent',
            title: 'Revert',
            emoji: 'üóë',
          },
        },
      },
      scope: {
        description:
          'Quel est le contexte des modifications (composant, nom de fichier)',
      },
      subject: {
        description: '√âcrivez une description concise, √† l‚Äôimp√©ratif',
      },
      body: {
        description:
          'Renseignez une description plus d√©taill√©e des modifications',
      },
      isBreaking: {
        description: 'Y a-il des changements majeurs ("breaking changes") ?',
      },
      breakingBody: {
        description:
          'Un commit cassant la compatibilit√© ascendante ("breaking changes") n√©cessite un corps de message. Veuillez renseigner une description plus longue et d√©taill√©e que la premi√®re ligne du commit.',
      },
      breaking: {
        description: 'D√©crivez les "breaking changes"',
      },
      isIssueAffected: {
        description: 'Cela concerne-t-il un ticket existant ?',
      },
      issuesBody: {
        description:
          'Vous devez ajouter un corps au message si ce commit ferme des tickets. Essayez de renseigner une description plus longue et d√©taill√©e que la premi√®re ligne du commit.',
      },
      issues: {
        description: 'Ajoutez une r√©f√©rence de ticket ("fix #123", "ref #123")',
      },
    },
  },
};
